- name: Install Docker 
  hosts: localhost
  become: true  # Run tasks with elevated privileges (sudo)
  vars:
    user_to_configure: "{{ current_user }}"
  tasks:
    - name: Removing Old Docker
      ignore_errors: true
      shell: |
        apt remove docker.io \
          docker-compose \
          docker-compose-v2 \
          docker-doc \
          containerd  \
          runc \
          podman-docker -y
    - name: Adding Docker Repo
      shell: |
        sudo apt update
        sudo apt install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
         $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
    - name: Installing Docker 
      shell: |
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
        usermod -aG docker {{ user_to_configure }}  
    - name: Starting and Enabling Docker
      systemd:
        name: docker
        state: started
        enabled: yes

- name: Install helm 
  hosts: localhost
  become: true  # Run tasks with elevated privileges (sudo)
  tasks:
    - name: Removing Old Helm
      ignore_errors: true
      shell: |
        rm -rf /usr/local/bin/helm
    - name: Installing Latest Helm
      shell: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod +x get_helm.sh
        ./get_helm.sh
        rm -rf get_helm.sh

- name: Install Terraform 
  hosts: localhost
  become: true  # Run tasks with elevated privileges (sudo)
  tasks:
    - name: Adding Terraform repo
      shell: |
        LATEST_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)
        echo "Latest Terraform Version: $LATEST_VERSION"
        wget https://releases.hashicorp.com/terraform/${LATEST_VERSION}/terraform_${LATEST_VERSION}_linux_amd64.zip
        unzip terraform_${LATEST_VERSION}_linux_amd64.zip
        rm -rf terraform_${LATEST_VERSION}_linux_amd64.zip
        mv terraform /usr/local/bin/
        terraform -version
